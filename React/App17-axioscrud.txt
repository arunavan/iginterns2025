import React, { useState, useEffect } from "react";
import axios from "axios";

const API_URL = "https://jsonplaceholder.typicode.com/users"; //  Sample API

const AxiosCRUD = () => {
  const [users, setUsers] = useState([]);
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [editingUserId, setEditingUserId] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // Fetch users (READ)
  const fetchUsers = async () => {
    try {
      const response = await axios.get(API_URL);
      setUsers(response.data);
      setLoading(false);
    } catch (err) {
      setError("Failed to fetch users");
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchUsers();
  }, []);

  // Add a user (CREATE)
  const addUser = async () => {
    if (!name || !email) return alert("Name and Email are required!");

    try {
      const response = await axios.post(API_URL, { name, email });
      setUsers([...users, response.data]); // Add new user to the list
      setName("");
      setEmail("");
    } catch (err) {
      alert("Error adding user");
    }
  };

  // Edit user (Update fields before sending PUT request)
  const editUser = (user) => {
    setEditingUserId(user.id);
    setName(user.name);
    setEmail(user.email);
  };

  // Update user (UPDATE)
  const updateUser = async () => {
    if (!name || !email) return alert("Name and Email are required!");

    try {
      const response = await axios.put(`${API_URL}/${editingUserId}`, { name, email });
      setUsers(users.map((user) => (user.id === editingUserId ? response.data : user)));
      setEditingUserId(null);
      setName("");
      setEmail("");
    } catch (err) {
      alert("Error updating user");
    }
  };

  // Delete user (DELETE)
  const deleteUser = async (id) => {
    if (!window.confirm("Are you sure you want to delete this user?")) return;

    try {
      await axios.delete(`${API_URL}/${id}`);
      setUsers(users.filter((user) => user.id !== id));
    } catch (err) {
      alert("Error deleting user");
    }
  };

  if (loading) return <p>Loading...</p>;
  if (error) return <p style={{ color: "red" }}>{error}</p>;

  return (
    <div>
      <h2>React Axios CRUD Example</h2>

      {/* User Form */}
      <div>
        <input type="text" placeholder="Name" value={name} onChange={(e) => setName(e.target.value)} />
        <input type="email" placeholder="Email" value={email} onChange={(e) => setEmail(e.target.value)} />
        {editingUserId ? (
          <button onClick={updateUser}>Update User</button>
        ) : (
          <button onClick={addUser}>Add User</button>
        )}
      </div>

      {/* Users List */}
      <ul>
        {users.map((user) => (
          <li key={user.id}>
            {user.name} - {user.email}
            <button onClick={() => editUser(user)}>Edit</button>
            <button onClick={() => deleteUser(user.id)}>Delete</button>
          </li>
        ))}
      </ul>
    </div>
  );
};

export default AxiosCRUD;
