1. Setup Axios Interceptors
We'll use Axios interceptors to: 
* Add an authorization token to requests
 * Log responses or handle global errors

 Axios Instance with Interceptors (api.js)

import axios from "axios";
const api = axios.create({
  baseURL: "https://jsonplaceholder.typicode.com",
  headers: {
    "Content-Type": "application/json",
  },
});

// **Request Interceptor** (Runs before the request is sent)
api.interceptors.request.use(
  (config) => {
    console.log("Request Sent:", config);
    config.headers.Authorization = `Bearer fake-jwt-token`; // Example Auth Header
    return config;
  },
  (error) => {
    return Promise.reject(error);
  }
);

// **Response Interceptor** (Runs after a response is received)
api.interceptors.response.use(
  (response) => {
    console.log("Response Received:", response);
    return response;
  },
  (error) => {
    console.error("Response Error:", error.response?.data || error.message);
    if (error.response?.status === 401) {
      alert("Unauthorized! Please log in again.");
    }
    return Promise.reject(error);
  }
);

export default api;


2. Using Axios Interceptors in React Component
Now, use the api.js instance inside a React component.

React Component (AxiosInterceptorExample.js)


import React, { useState, useEffect } from "react";
import api from "./api"; // Import Axios instance with interceptors

const AxiosInterceptorExample = () => {
  const [data, setData] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    api
      .get("/users") // Fetch users from API
      .then((response) => {
        setData(response.data);
        setLoading(false);
      })
      .catch((error) => {
        setError("Failed to fetch data");
        setLoading(false);
      });
  }, []);

  if (loading) return <p>Loading...</p>;
  if (error) return <p style={{ color: "red" }}>{error}</p>;

  return (
    <div>
      <h2>Axios Interceptors Example</h2>
      <ul>
        {data.map((user) => (
          <li key={user.id}>{user.name} - {user.email}</li>
        ))}
      </ul>
    </div>
  );
};

export default AxiosInterceptorExample;

Request Interceptor= >
Attaches an Authorization token to every request.
Logs the request details.

Response Interceptor=>
Logs response details.
Handles global errors like 401 Unauthorized.
